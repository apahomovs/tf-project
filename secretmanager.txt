# create random username:
resource "random_string" "database_username" {
  length  = 8
  special = false
}

# create random password:
resource "random_string" "database_password" {
  length  = 16
  special = true
}

# create secrets manager secret for username:
resource "aws_secretsmanager_secret" "database_username" {
  name = "my-rds-username"
}

# add username to secrets manager secret:
resource "aws_secretsmanager_secret_version" "username" {
  secret_id     = aws_secretsmanager_secret.database_username.id
  secret_string = random_string.database_username.result
}

# create secrets manager secret for password:
resource "aws_secretsmanager_secret" "database_password" {
  name = "my-rds-password"
}

# add password to secrets manager secret:
resource "aws_secretsmanager_secret_version" "password" {
  secret_id     = aws_secretsmanager_secret.database_password.id
  secret_string = random_string.database_password.result
}
########################################################################################################
resource "aws_vpc" "vpc" {
  cidr_block = "10.0.0.0/24"
  tags       = { Name = "vpc" }
}

resource "aws_subnet" "private_1a" {
  vpc_id                  = aws_vpc.vpc.id
  cidr_block              = "10.0.0.128/26"
  availability_zone       = "us-east-1a"
  map_public_ip_on_launch = false
  tags                    = { Name = "private_1a" }
}

resource "aws_subnet" "private_1b" {
  vpc_id                  = aws_vpc.vpc.id
  cidr_block              = "10.0.0.192/26"
  availability_zone       = "us-east-1b"
  map_public_ip_on_launch = false
  tags                    = { Name = "private_1b" }
}

resource "aws_security_group" "rds_sgrp" {
  name        = "rds-sgrp"
  description = "rds_sgrp"
  vpc_id      = aws_vpc.vpc.id
  tags        = { Name = "rds_sgrp" }

  ingress {
    from_port   = 3306
    to_port     = 3306
    protocol    = "TCP"
    cidr_blocks = ["0.0.0.0/0"]
    description = "3306 from www"
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
    description = "outbound to www"
  }
}

resource "aws_db_subnet_group" "rds_subnet_group" {
  name       = "rds-subnet-group"
  subnet_ids = [aws_subnet.private_1a.id, aws_subnet.private_1b.id]
  tags       = { Name = "My DB subnet group" }
}

# create database:
resource "aws_db_instance" "db" {
  allocated_storage           = "20"
  allow_major_version_upgrade = false
  auto_minor_version_upgrade  = false
  apply_immediately           = false
  db_subnet_group_name        = aws_db_subnet_group.rds_subnet_group.name
  engine                      = "mysql"
  engine_version              = "5.7.37"
  instance_class              = "db.t2.micro"
  multi_az                    = false
  db_name                     = "pracdb"
  username                    = random_string.database_username.result
  password                    = random_string.database_password.result
  publicly_accessible         = false
  skip_final_snapshot         = true
  storage_encrypted           = false
  storage_type                = "standard"
  vpc_security_group_ids      = [aws_security_group.rds_sgrp.id]
}